scalar Point
scalar DateTime
scalar PointInput

type Usuario {
  userId: ID!
}

type Session {
  sessionId: ID!
  sessionStart: Int
}

type Environment {
  environmentId: ID!
  name: String
}

type Mutation {
  mergeUsuario(userId: ID!): Usuario
    @cypher(
      statement: """
      MERGE (u:Usuario {userId: $userId})
      RETURN u
      """
    ) 
  mergeSession(sessionId: ID!, sessionStart: String): Session
    @cypher(
      statement: """
      MERGE (s:Session {sessionId: $sessionId})
      ON CREATE SET s.sessionStart = $sessionStart
      RETURN s
      """
    )
  mergeSessionUsuario(sessionId: ID!, userId: ID!): Usuario
    @cypher(
      statement: "MATCH (u:Usuario {userId: $userId}) MERGE (s:Session{sessionId: $sessionId}) MERGE (s)-[:REALIZADA_POR]->(u) RETURN u"
    )
  mergeEnvironment(environmentId: ID!, name: String): Environment
  @cypher(
      statement: """
      MERGE (e:Environment {environmentId: $environmentId})
      ON CREATE SET e.name = $name
      RETURN e
      """
    )
}

type Query {
  userCount: Int! @cypher(statement: "MATCH (u:User) RETURN COUNT(u)")
}
